---
import Layout from '../layouts/Layout.astro';
import PocketBase from 'pocketbase';
import { PB_URL, PB_USER, PB_PASS } from 'astro:env/server';
import { Content as Description } from '../content/homepage/reverse-split-description.md';

let message;
if (Astro.request.method === 'POST') {
  const pb = new PocketBase(PB_URL);
  const user = await pb.collection('users').authWithPassword(PB_USER, PB_PASS);
  if (!pb.authStore.isValid) {
    console.log('Invalid Pocketbase credentials');
    return new Response(
      'Internal server error. Its not you, its me. Please contact site admin.',
      {
        status: 500,
      }
    );
  }

  const formData = await Astro.request.formData();
  const name = formData.get('name');
  const email = formData.get('email');

  console.log(`New subscriber: ${name} <${email}>`);
  try {
    await pb.collection('new_subscribers').create({ name, email });
    message = { type: 'success', text: 'Thanks for subscribing!' };
  } catch (e) {
    console.error(e);
    message = {
      type: 'error',
      text: 'Error subscribing. Make sure both name and email fields are filled out properly.',
    };
  }
}
---

<Layout title='Welcome to the Reverse Split Newsletter'>
  <main>
    <div class='instructions flex flex-col items-center'>
      <h1 class='text-4xl font-bold mb-6 text-center'>
        ðŸš€Reverse Split NewsletterðŸš€
      </h1>
      <p class='max-w-prose text-justify text-xl'>
        Leave your name and email to receive the latest news and updates on
        upcoming stock reverse splits.
      </p>
    </div>
    <div class='flex flex-col items-center'>
      <form
        method='POST'
        class='w-full max-w-prose flex flex-col gap-4 instructions'
      >
        {
          message && (
            <p
              class:list={[
                'p-2 rounded-lg',
                message.type === 'success' && 'bg-green-700',
                message.type === 'error' && 'bg-red-700',
              ]}
            >
              {message.text}
            </p>
          )
        }
        <div class='flex flex-col gap-2'>
          <label for='name'>Name:</label>
          <input
            class='p-1 bg-black rounded-lg'
            name='name'
            type='text'
            required
          />
        </div>
        <div class='flex flex-col gap-2'>
          <label for='email'>Email:</label>
          <input
            class='p-1 bg-black rounded-lg'
            name='email'
            type='email'
            required
          />
        </div>
        <button class='bg-purple-700 p-1 rounded-lg' type='submit'>
          Subscribe
        </button>
      </form>

      <div
        class:list={[
          'w-full',
          'text-slate-300',
          'prose max-w-prose',
          'dark:prose-invert',
          'prose-a:text-blue-600',
          'prose-p:text-justify',
          'prose-img:rounded-xl',
          'prose-img:shadow-lg',
          'prose-headings:opacity-80',
          'prose-headings:text-purple-300',
        ]}
      >
        <Description />
      </div>
    </div>
  </main>
</Layout>
<script>
  if (window.history.replaceState) {
    window.history.replaceState(null, '', window.location.href);
  }
</script>

<style>
  main {
    margin: auto;
    padding: 1rem 0.1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    /* font-size: 20px; */
    /* line-height: 1.6; */
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
