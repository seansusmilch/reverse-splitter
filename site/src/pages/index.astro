---
import Layout from '../layouts/Layout.astro';
import Info from '../components/Info.astro';
import PocketBase from 'pocketbase';
import { PB_URL, PB_USER, PB_PASS } from 'astro:env/server';

let message;
if (Astro.request.method === 'POST') {
  const pb = new PocketBase(PB_URL);
  const user = await pb.collection('users').authWithPassword(PB_USER, PB_PASS);
  if (!pb.authStore.isValid) {
    console.log('Invalid Pocketbase credentials');
    return new Response(
      'Internal server error. Its not you, its me. Please contact site admin.',
      {
        status: 500,
      }
    );
  }

  const formData = await Astro.request.formData();
  const name = formData.get('name');
  const email = formData.get('email');

  console.log(`New subscriber: ${name} <${email}>`);
  await pb.collection('subscribers').create({ name, email });
  message = 'Thanks for subscribing!';
}
---

<Layout title='Welcome to the Reverse Split Newsletter'>
  <main>
    <div class='instructions'>
      <h1 class='text-4xl font-bold mb-6 text-center'>
        Reverse Split Newsletter
      </h1>
      <p>
        Leave your name and email to receive the latest news and updates on
        upcoming stock reverse splits.
      </p>
    </div>

    <form method='POST' class='flex flex-col gap-4 instructions'>
      {message && <p class='bg-green-700 p-2 rounded-lg'>{message}</p>}
      <div class='flex flex-col gap-2'>
        <label for='name'>Name:</label>
        <input class='p-1 bg-black rounded-lg' name='name' type='text' />
      </div>
      <div class='flex flex-col gap-2'>
        <label for='email'>Email:</label>
        <input class='p-1 bg-black rounded-lg' name='email' type='email' />
      </div>
      <button class='bg-purple-700 p-1 rounded-lg' type='submit'>
        Subscribe
      </button>
    </form>

    <Info />
  </main>
</Layout>

<style>
  main {
    margin: auto;
    padding: 1rem 0.1rem;
    width: 800px;
    max-width: calc(100% - 2rem);
    color: white;
    /* font-size: 20px; */
    /* line-height: 1.6; */
  }
  .text-gradient {
    background-image: var(--accent-gradient);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-size: 400%;
    background-position: 0%;
  }
  .instructions {
    margin-bottom: 2rem;
    border: 1px solid rgba(var(--accent-light), 25%);
    background: linear-gradient(
      rgba(var(--accent-dark), 66%),
      rgba(var(--accent-dark), 33%)
    );
    padding: 1.5rem;
    border-radius: 8px;
  }
  .instructions code {
    font-size: 0.8em;
    font-weight: bold;
    background: rgba(var(--accent-light), 12%);
    color: rgb(var(--accent-light));
    border-radius: 4px;
    padding: 0.3em 0.4em;
  }
  .instructions strong {
    color: rgb(var(--accent-light));
  }
  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(24ch, 1fr));
    gap: 2rem;
    padding: 0;
  }
</style>
